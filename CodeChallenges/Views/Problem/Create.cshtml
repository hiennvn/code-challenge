@model CodeChallenges.Models.Problem

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using ( Html.BeginForm() )
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary( true )

    <fieldset>
        <legend>Problem</legend>

        <div class="editor-label">
            @Html.LabelFor( model => model.ChallengeId, "Challenge" )
        </div>
        <div class="editor-field">
            @Html.DropDownList( "ChallengeId", String.Empty )
            @Html.ValidationMessageFor( model => model.ChallengeId )
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.Title )
        </div>
        <div class="editor-field">
            @Html.EditorFor( model => model.Title )
            @Html.ValidationMessageFor( model => model.Title )
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.Description )
        </div>
        <div class="editor-field">
            @(Html.Telerik().Editor()
      .Name( "Description" )
      .HtmlAttributes( new { style = "width: 740px;height:440px" } )
      .Value( @<text></text> )
            )
            @Html.ValidationMessageFor( model => model.Description )
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.Content )
        </div>
        <div class="editor-field">
            @(Html.Telerik().Editor()
      .Name( "Content" )
      .HtmlAttributes( new { style = "width: 740px;height:440px" } )
      .Value( @<text></text> )
            )
            @Html.ValidationMessageFor( model => model.Content )
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.SampleInput )
        </div>
        <div class="editor-field">
            @Html.TextAreaFor( model => model.SampleInput )
            @Html.ValidationMessageFor( model => model.SampleInput )
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.SampleOutput )
        </div>
        <div class="editor-field">
            @Html.TextAreaFor( model => model.SampleOutput )
            @Html.ValidationMessageFor( model => model.SampleOutput )
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.Input )
        </div>
        <div class="editor-field">
            @Html.TextAreaFor( model => model.Input )
            @Html.ValidationMessageFor( model => model.Input )
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.Output )
        </div>
        <div class="editor-field">
            @Html.TextAreaFor( model => model.Output )
            @Html.ValidationMessageFor( model => model.Output )
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.Attachment )
        </div>
        <div class="editor-field">
            @Html.EditorFor( model => model.Attachment )
            @Html.ValidationMessageFor( model => model.Attachment )
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.Order )
        </div>
        <div class="editor-field">
            @Html.EditorFor( model => model.Order )
            @Html.ValidationMessageFor( model => model.Order )
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink( "Back to List", "Index" )
</div>

@section Scripts {
    @Scripts.Render( "~/bundles/jqueryval" )
}